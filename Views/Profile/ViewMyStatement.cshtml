@{
    ViewData["Title"] = "My Statement";
}
<h1>@ViewData["Title"]</h1>

<div class="col-md-10">
    <h6>Choose your account type: </h6>
    @Html.DropDownList("Sortby", new SelectListItem[]
    {
     new SelectListItem() { Text = "Savings", Value = "Saving" },
     new SelectListItem() { Text = "Checking", Value = "Checking" }},
         new
         {
             @onchange = "callChangefunc(this.value)"
         });

    <script>function callChangefunc(val) {
            window.location.href = "/Profile/ViewMyStement?accountType=" + val;
        }</script>

    @Html.DropDownList("Sortby", new SelectListItem[]
                {
     new SelectListItem() { Text = "Savings", Value = "Saving" },
     new SelectListItem() { Text = "Checking", Value = "Checking" }},
                     new
                     {
                         @onchange = "callChangefunc(this.value)"
                     })

    <script>function callChangefunc(val) {
            window.location.href = "/Profile/ViewMyStatement?accountType=" + val;
        }</script>
    <span>The transaction history for your selected account will displayed.</span>
    <br />
    <br />
</div>

@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@model IPagedList<Transaction>
@{
    ViewData["Title"] = "View Orders";
    var customer = (Customer)ViewBag.Customer;
}

@functions{
    public string RenderTimeLocale(Transaction trans)
    {
        var datePatt = "dd/MM/yyyy hh:mm:ss tt";
        return trans.TransactionTimeUtc.ToLocalTime().ToString(datePatt);
    }
}

<div>
    <h1>Transaction for @customer.Name, CustomerID @customer.CustomerID</h1>
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(x => x[0].TransactionID)</th>
            <th>@Html.DisplayNameFor(x => x[0].AccountNumber)</th>
            <th>@Html.DisplayNameFor(x => x[0].DestinationAccountNumber)</th>
            <th>@Html.DisplayNameFor(x => x[0].Amount)</th>
            <th>@Html.DisplayNameFor(x => x[0].TransactionType)</th>
            <th>@Html.DisplayNameFor(x => x[0].TransactionTimeUtc)</th>
        </tr>
        @foreach (var trans in Model)
        {
            var active = trans.TransactionTimeUtc;
            <tr>
                <td>@Html.DisplayFor(x => trans.TransactionID)</td>
                <td>@Html.DisplayFor(x => trans.AccountNumber)</td>
                <td>@Html.DisplayFor(x => trans.DestinationAccountNumber)</td>
                <td>@Html.DisplayFor(x => trans.Amount)</td>
                <td>@Html.DisplayFor(x => trans.TransactionType)</td>
                <td>@Html.DisplayFor(x => active, @RenderTimeLocale(trans))</td>
            </tr>
        }
    </table>

    @Html.PagedListPager(Model, page => Url.Action("ViewMyStatement", new { page }),
            new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })
</div>
